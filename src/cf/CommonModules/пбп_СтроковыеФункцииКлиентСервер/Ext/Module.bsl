// Библиотека проектных подсистем для упрощения разработки архитектуры на 1С: Предприятие 8,
// включая доработку типовых конфигураций.
//
// Copyright First BIT company
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//
// URL:    https://github.com/firstBitSportivnaya/PSSL/
//

////////////////////////////////////////////////////////////////////////////////
// Работа со строками (клиент, сервер): Модуль содержит методы работы со строками.

#Область ПрограммныйИнтерфейс

// Разбирает строку с разделителями и упаковывает значения в массив.
// 
// Параметры:
//  ИсходнаяСтрока  - Строка
//  Разделитель     - Строка
//  ПоНарастающей   - Булево (По умолчанию = Ложь) .
//
// ВозвращаемоеЗначение:
//  Массив
//
Функция РазобратьСтрокуСРазделителями(ИсходнаяСтрока, Разделитель, ПоНарастающей = Ложь) Экспорт
	
	Результат = Новый Массив;
	
	Список = пбп_ОбщегоНазначенияКлиентСервер.РазобратьСтрокуСРазделителями(ИсходнаяСтрока, Разделитель);
	Если ПоНарастающей Тогда
		НарастающаяСтрока = "";
		Для Каждого СтрокаСписка Из Список Цикл
			
			НарастающаяСтрока = ?(ПустаяСтрока(НарастающаяСтрока),
				СтрокаСписка, СтрШаблон("%1.%2", НарастающаяСтрока, СтрокаСписка));
			Результат.Добавить(НарастающаяСтрока);
		КонецЦикла; 
	Иначе
		Результат = Список;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Возвращает текст с добавлением/удаление разделителя "|".
// 
// Параметры:
//  Текст    - Строка - Обрабатываемый текст.
//  Добавить - Булево - Признак добавления/удаления вертикальной черты.
// 
// Возвращаемое значение:
//  Строка - Результат обработки строки.
//
Функция УбратьДобавитьВертикальнуюЧерту(Текст, Добавить = Ложь) Экспорт
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТекст(Текст);
	КоличествоСтрок = ТекстовыйДокумент.КоличествоСтрок();
	
	Если Добавить Тогда
		
		Для Сч = 1 По КоличествоСтрок Цикл
		
			ТекущаяСтрока = ТекстовыйДокумент.ПолучитьСтроку(Сч);
			
			Если Сч = 1 Тогда
				ТекущаяСтрока = """" + ТекущаяСтрока;
			Иначе
				
				ТекущаяСтрока = СтрЗаменить(ТекущаяСтрока, """", """""");
				ТекущаяСтрока = СтрШаблон("|%1", ТекущаяСтрока);
				
				Если Сч = КоличествоСтрок Тогда
					ТекущаяСтрока = СтрШаблон("%1%2", ТекущаяСтрока, """");
				КонецЕсли;
			КонецЕсли;
			
			ТекстовыйДокумент.ЗаменитьСтроку(Сч, ТекущаяСтрока);
		КонецЦикла;
	Иначе
		
		Для Сч = 1 По КоличествоСтрок Цикл
		
			ТекущаяСтрока = ТекстовыйДокумент.ПолучитьСтроку(Сч);
			
			Если Сч = 1 Тогда
				ТекущаяСтрока = Сред(ТекущаяСтрока, 2);
			ИначеЕсли Сч = КоличествоСтрок Тогда
				ТекущаяСтрока = Сред(ТекущаяСтрока, 1, СтрДлина(ТекущаяСтрока) - 1);
			КонецЕсли;
			
			ТекущаяСтрока = СтрЗаменить(ТекущаяСтрока, """""", """");
			ТекущаяСтрока = СтрЗаменить(ТекущаяСтрока, "|", "");
			
			ТекстовыйДокумент.ЗаменитьСтроку(Сч, ТекущаяСтрока);
		КонецЦикла;
	КонецЕсли;
	
	Результат = ТекстовыйДокумент.ПолучитьТекст();
	Результат = Сред(Результат, 1, СтрДлина(Результат) - 1);
	
	Возврат Результат;
	
КонецФункции

// Превращает строку camelCase в синоним
//
// Параметры:
//  ИсходнаяСтрока - Строка - Строка типа ИдентификаторНастройки
// 
// Возвращаемое значение:
//  Строка - Синоним
//
Функция СинонимСтроки(ИсходнаяСтрока) Экспорт
	
	Результат = пбп_ПереадресацияКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИсходнаяСтрока);
	Если Результат.Количество() > 1 Тогда
		Возврат "";
	КонецЕсли;
	
	ДлинаСтроки = СтрДлина(ИсходнаяСтрока) + 1;
	Старт = 1;
	Конец = 0;
	Части = Новый Массив;
	Для Конец = 2 По ДлинаСтроки Цикл
		КодСимвола = КодСимвола(Сред(ИсходнаяСтрока, Конец, 1));
		Если СимволВерхнегоРегистра(КодСимвола) Или Конец = ДлинаСтроки Тогда
			КолСимволов = Конец - Старт;
			Части.Добавить(Сред(ИсходнаяСтрока, Старт, ?(КолСимволов = 0, ДлинаСтроки - Старт, КолСимволов)));
			Старт = Конец;
		КонецЕсли;
	КонецЦикла;
	Синоним = НРег(СтрСоединить(Части, " "));
	Синоним = ВРег(Лев(Синоним, 1)) + Сред(Синоним,2);
	
	Возврат Синоним;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СимволВерхнегоРегистра(КодСимвола)
	
	минКирилица = 1040;
	максКирилица = 1070;
	минЛатиница = 65;
	максЛатиница = 90;
	
	Если (КодСимвола >= минКирилица И КодСимвола <= максКирилица)
		Или (КодСимвола >= минЛатиница И КодСимвола <= максЛатиница) Тогда
		Возврат Истина;
	КонецЕсли;
		
	Возврат Ложь;
	
КонецФункции

#КонецОбласти
