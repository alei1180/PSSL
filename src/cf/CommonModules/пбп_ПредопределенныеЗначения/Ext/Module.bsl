// Библиотека проектных подсистем для упрощения разработки архитектуры на 1С: Предприятие 8,
// включая доработку типовых конфигураций.
//
// Copyright First BIT company
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//
// URL:    https://github.com/firstBitSportivnaya/PSSL/
//

#Область ПрограммныйИнтерфейс

// Инициализирует предопределенные значения из таблицы.
//
// Параметры:
//  МенеджерОбъекта	 - СправочникМенеджер, ПланВидовХарактеристикМенеджер	 - менеджер объекта.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица с конфликтными элементами
//
Функция ИнициализироватьПредопределенныеЗначения(МенеджерОбъекта) Экспорт
	
	Если Не пбп_ПредопределенныеЗначенияСлужебный.МенеджерВходитВПодсистемуПредопределенных(МенеджерОбъекта) Тогда
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;
	
	ТЗПредопределенныхЗначений = пбп_ПредопределенныеЗначенияСлужебный
		.ТаблицаПредопределенныхЭлементов(МенеджерОбъекта);
	
	ТаблицаКонфликтныхЭлементов = пбп_ПредопределенныеЗначенияСлужебный
		.ОбработатьПредопределенныеЗначения(ТЗПредопределенныхЗначений, МенеджерОбъекта);
	
	Возврат ТаблицаКонфликтныхЭлементов;
	
КонецФункции

// Возвращает ключи хеша на основании массива полей элемента
//
// Параметры:
//  Поля		 - Массив - Поля для формирования ключей хеша
//  ЭтоГруппа	 - Булево - От этого признака зависят исключаемые поля
// 
// Возвращаемое значение:
//  Структура - Ключи хеша
//
Функция КлючиХешаПредопределенногоЭлемента(Поля, ЭтоГруппа = Ложь) Экспорт
	
	Если ТипЗнч(Поля) <> Тип("Массив") Или Не ЗначениеЗаполнено(Поля) Тогда
		Возврат Новый Структура;
	КонецЕсли;
	
	мКлючи = Новый Массив;
	
	Если ЭтоГруппа Тогда
		ИсключаемыеПоля = пбп_ПредопределенныеЗначенияПереопределяемый.ИсключаемыеПоляДляРасчетаХешаГруппа();
	Иначе
		ИсключаемыеПоля = пбп_ПредопределенныеЗначенияПереопределяемый.ИсключаемыеПоляДляРасчетаХешаЭлемент();
	КонецЕсли;
	
	Для Каждого Поле Из Поля Цикл
		Если ИсключаемыеПоля.Свойство(Поле) Или СтрНачинаетсяС(Поле, "Служебный_") Тогда
			Продолжить;
		КонецЕсли;
		мКлючи.Добавить(Поле);
	КонецЦикла;
	
	Возврат Новый Структура(СтрСоединить(мКлючи, ","));
	
КонецФункции

// Обновляет хеш предопределенного элемента в регистре, устанавливая при этом ручное изменение.
//
// Параметры:
//  Объект - СправочникОбъект, ПланВидовХарактеристикОбъект	 - предопределенный элемент.
//
Процедура ОбновитьХешПредопределенногоЭлемента(Объект) Экспорт
	
	Флаг = пбп_ПереадресацияКлиентСервер.СвойствоСтруктуры(Объект.ДополнительныеСвойства, "РучноеИзменение", Истина);
	
	РегистрыСведений.пбп_СостоянияПредопределенныхЭлементов.ОбновитьХешЭлемента(Объект.Ссылка, Объект.ЭтоГруппа, Флаг);
	
КонецПроцедуры

// Создает запись регистра с заданными параметрами.
//
// Параметры:
//  Объект		 - СправочникСсылка, ПланВидовХарактеристикСсылка	 - Ссылка на предопределенный элемент.
//  ЭтоГруппа	 - Булево - - Признак того что элемент является группой.
//  КлючиХеша	 - Структура, Неопределено - Если ключи хеша не переданы, то они будут сформированы заново.
//
Процедура СоздатьЗаписьСостоянияПредопределенногоЭлемента(Объект, ЭтоГруппа, КлючиХеша = Неопределено) Экспорт
	РегистрыСведений.пбп_СостоянияПредопределенныхЭлементов.СоздатьЗаписьРегистра(Объект, ЭтоГруппа, КлючиХеша);
КонецПроцедуры

// Обновляет флаг ручного изменения элемента
//
// Параметры:
//  Элемент  - СправочникСсылка, ПланВидовХарактеристикСсылка - Ссылка на предопределенный элемент
//  Флаг     - Булево - Устанавливается если были изменены ключевые поля пользователем.
//
Процедура УстановитьФлагРучноеИзменение(Элемент, Флаг = Ложь) Экспорт
	РегистрыСведений.пбп_СостоянияПредопределенныхЭлементов.ОбновитьФлагРучногоИзменения(Элемент, Флаг);
КонецПроцедуры

// Заполнение предопределенных элементов, с возможностью серверного оповещения
// о существующих конфликтах при создании элементов.
//
// Параметры:
//  ОтправитьСерверноеОповещение - Булево - В случае необходимости оповещения пользователей, установить флаг в Истину.
//
Процедура ЗаполнениеПредопределенныхЭлементов(ОтправитьСерверноеОповещение = Ложь) Экспорт
	
	Типы = Метаданные.ОпределяемыеТипы.пбп_ПредопределенныеВсеСсылкиПереопределяемый.Тип.Типы();
	
	Для Каждого Тип Из Типы Цикл
		ОбъектМетаданных = Метаданные.НайтиПоТипу(Тип);
		ПолноеИмя = ОбъектМетаданных.ПолноеИмя();
		
		Менеджер = пбп_Переадресация.МенеджерОбъектаПоПолномуИмени(ПолноеИмя);
		
		Если Не ОтправитьСерверноеОповещение Тогда
			ИнициализироватьПредопределенныеЗначения(Менеджер);
			Продолжить;
		КонецЕсли;
		
		ПредставлениеОбъекта = ?(ПустаяСтрока(ОбъектМетаданных.ПредставлениеОбъекта),
			ОбъектМетаданных.Синоним,
			ОбъектМетаданных.ПредставлениеОбъекта);
		
		ТаблицаКонфликтныхЭлементов = ИнициализироватьПредопределенныеЗначения(Менеджер);
		
		Если ЗначениеЗаполнено(ТаблицаКонфликтныхЭлементов) Тогда
			Результат = Новый Структура;
			Результат.Вставить("ИмяОбъектаМетаданных", ПолноеИмя);
			Результат.Вставить("ПредставлениеОбъекта", ПредставлениеОбъекта);
			
			пбп_Переадресация.ОтправитьСерверноеОповещение(
				"пбп_ПредопределенныеЗначения",
				Результат,
				Неопределено);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
