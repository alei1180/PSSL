///////////////////////////////////////////////////////////////////////////////////////////////////////
// Библиотека проектных подсистем для упрощения разработки архитектуры на 1С: Предприятие 8,
// включая доработку типовых конфигураций.
//
// Copyright First BIT company
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//
// URL: https://github.com/firstBitSportivnaya/PSSL/
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Функция ОпределитьМодульПереадресации предназначена для проверки наличия общего модуля
// БСП с указанным именем и получения этого модуля, если он существует.
//
// Параметры:
//  ИмяМодуля	 - Строка - имя общего модуля, который необходимо найти.
// 
// Возвращаемое значение:
//  Структура - общий модуль и что он существует
//  * Модуль 	- ОбщийМодуль - общий модуль из БСП.
//  * МодульСуществует - Булево - Если флаг истина, модуль существует.
//
Функция ОпределитьМодульПереадресации(ИмяМодуля) Экспорт
	
	Возврат пбп_Переадресация.ОпределитьМодульПереадресации(ИмяМодуля);
	
КонецФункции

#Область ПереадресацияМетодов

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область МодульПереадресацииПоПодсистемам

Функция ПереадресацияМодуляСтандартныеПодсистемыПовтИсп()
	Возврат пбп_ПереадресацияПовтИсп.ОпределитьМодульПереадресации("СтандартныеПодсистемыПовтИсп");
КонецФункции

#КонецОбласти

#Область ПереадресацияМетодов

#Область СтандартныеПодсистемыПовтИсп

// Аналог метода БСП. Возвращает соответствие имен "функциональных" подсистем и значения Истина.
// У "функциональной" подсистемы снят флажок "Включать в командный интерфейс".
//
// Возвращаемое значение:
//  ФиксированноеСоответствие из КлючИЗначение:
//   * Ключ - Строка
//   * Значение - Булево
//
Функция ИменаПодсистем() Экспорт
	
	Результат = ПереадресацияМодуляСтандартныеПодсистемыПовтИсп();
	Если Результат.МодульСуществует Тогда
		Возврат Результат.Модуль.ИменаПодсистем();
	КонецЕсли;
	
	ОтключенныеПодсистемы = Новый Соответствие;
	
	Имена = Новый Соответствие;
	ВставитьИменаПодчиненныхПодсистем(Имена, Метаданные, ОтключенныеПодсистемы);
	
	Возврат Новый ФиксированноеСоответствие(Имена);
	
КонецФункции

// Аналог метода БСП.
//
Функция ОписаниеТипаВсеСсылки() Экспорт
	
	Результат = ПереадресацияМодуляСтандартныеПодсистемыПовтИсп();
	Если Результат.МодульСуществует Тогда
		Возврат Результат.Модуль.ОписаниеТипаВсеСсылки();
	КонецЕсли;
	
	Возврат Новый ОписаниеТипов(Новый ОписаниеТипов(Новый ОписаниеТипов(Новый ОписаниеТипов(Новый ОписаниеТипов(
		Новый ОписаниеТипов(Новый ОписаниеТипов(Новый ОписаниеТипов(Новый ОписаниеТипов(
			Справочники.ТипВсеСсылки(),
			Документы.ТипВсеСсылки().Типы()),
			ПланыОбмена.ТипВсеСсылки().Типы()),
			Перечисления.ТипВсеСсылки().Типы()),
			ПланыВидовХарактеристик.ТипВсеСсылки().Типы()),
			ПланыСчетов.ТипВсеСсылки().Типы()),
			ПланыВидовРасчета.ТипВсеСсылки().Типы()),
			БизнесПроцессы.ТипВсеСсылки().Типы()),
			БизнесПроцессы.ТипВсеСсылкиТочекМаршрутаБизнесПроцессов().Типы()),
			Задачи.ТипВсеСсылки().Типы());
	
КонецФункции

// Аналог метода БСП.
//
Процедура ВставитьИменаПодчиненныхПодсистем(Имена, РодительскаяПодсистема, ОтключенныеПодсистемы, ИмяРодительскойПодсистемы = "")
	
	Для Каждого ТекущаяПодсистема Из РодительскаяПодсистема.Подсистемы Цикл
		
		Если ТекущаяПодсистема.ВключатьВКомандныйИнтерфейс Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяТекущейПодсистемы = ИмяРодительскойПодсистемы + ТекущаяПодсистема.Имя;
		Если ОтключенныеПодсистемы.Получить(ИмяТекущейПодсистемы) = Истина Тогда
			Продолжить;
		Иначе
			Имена.Вставить(ИмяТекущейПодсистемы, Истина);
		КонецЕсли;
		
		Если ТекущаяПодсистема.Подсистемы.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ВставитьИменаПодчиненныхПодсистем(Имена, ТекущаяПодсистема, ОтключенныеПодсистемы, ИмяТекущейПодсистемы + ".");
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти